/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var ROI = ee.FeatureCollection("users/project143/AOI");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var LandsatLST = require('users/sofiaermida/landsat_smw_lst:modules/Landsat_LST.js')
// link to the code that computes broad-band emissivity
var BBE = require('users/sofiaermida/landsat_smw_lst:modules/broadband_emiss.js')
// select region of interest, date range, and landsat satellite
var site = ROI
var geometry = ROI;
var date_start = '1990-08-01';
var date_end = '2021-12-31';
var use_ndvi = true;
// compute the LST for each Landsat
var L8coll = LandsatLST.collection('L8', date_start, date_end, geometry, use_ndvi);
var L7coll = LandsatLST.collection('L7', date_start, date_end, geometry, use_ndvi);
var L5coll = LandsatLST.collection('L5', date_start, date_end, geometry, use_ndvi);

// compute broadband emissivity
L8coll = L8coll.map(BBE.addBand(true))
L7coll = L7coll.map(BBE.addBand(true))
L5coll = L5coll.map(BBE.addBand(true))

// get bands for each landsat in one collection
var getband = function(landsat, bandname){
  var wrap = function(image){
    return image.select(bandname).rename(bandname.concat('_').concat(landsat))
  }
  return wrap
}
// merge all Landsat LST collections for the chart
var bandname = 'LST'
var LandsatColl = L8coll.map(getband('L8',bandname)).merge(L7coll.map(getband('L7',bandname))).merge(L5coll.map(getband('L5',bandname)));

var TimeSeries = ui.Chart.image.series(
    LandsatColl, geometry, ee.Reducer.mean(), 30, 'system:time_start')
        .setChartType('ScatterChart')
        .setOptions({
          vAxis: {title: bandname},
          lineWidth: 1,
          pointSize: 4
});
print(TimeSeries)
// uncomment and edit the code below to export timeseries to your drive

var myFeatures = ee.FeatureCollection(LandsatColl.map(function(image){
  var date = ee.Date(image.get('system:time_start'));
  var lst = image.select('LST').clip(geometry)
  var em = image.select('EM').clip(geometry)
  var fvc = image.select('FVC').clip(geometry)
  var tpw = image.select('TPW').clip(geometry)
  var bbe = image.select('BBE').clip(geometry)
  return ee.Feature(site, {
    'year':ee.Number(date.get('year')), 
    'month':ee.Number(date.get('month')),
    'day':ee.Number(date.get('day')),
    'hour':ee.Number(date.get('hour')),
    'minute':ee.Number(date.get('minute')),
    'lst':ee.Number(lst.reduceRegion(
      ee.Reducer.mean(),geometry,30).get('LST')),
    'tpw':ee.Number(tpw.reduceRegion(
      ee.Reducer.mean(),geometry,30).get('TPW')),
    'em':ee.Number(em.reduceRegion(
      ee.Reducer.mean(),geometry,30).get('EM')),
    'fvc':ee.Number(fvc.reduceRegion(
      ee.Reducer.mean(),geometry,30).get('FVC')),
    'bbe':ee.Number(bbe.reduceRegion(
      ee.Reducer.mean(),geometry,30).get('BBE'))
  });
}));
Export.table.toDrive({
  collection: myFeatures,
  description: 'MyTask',
  folder: 'MyFolder',
  fileNamePrefix: 'Landsat_LST_timeseries', 
  fileFormat: 'CSV'
});